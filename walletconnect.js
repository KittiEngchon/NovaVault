// walletconnect.js
let walletConnector = null;

async function connectWithWalletConnect() {
  if (typeof WalletConnect === "undefined" || typeof QRCodeModal === "undefined") {
    alert("‚ùå WalletConnect library not loaded.");
    return;
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°
  walletConnector = new WalletConnect.default({
    bridge: "https://bridge.walletconnect.org",
    qrcodeModal: QRCodeModal.default
  });

  // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°
  if (!walletConnector.connected) {
    await walletConnector.createSession();
  } else {
    const { accounts, chainId } = walletConnector;
    onWalletConnected(accounts, chainId);
  }

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
  walletConnector.on("connect", (error, payload) => {
    if (error) {
      console.error("WalletConnect Error:", error);
      return;
    }
    const { accounts, chainId } = payload.params[0];
    onWalletConnected(accounts, chainId);
  });

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢
  walletConnector.on("session_update", (error, payload) => {
    if (error) return console.error("Session update error:", error);
    const { accounts, chainId } = payload.params[0];
    onWalletConnected(accounts, chainId);
  });

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
  walletConnector.on("disconnect", (error) => {
    if (error) console.error("Disconnect error:", error);
    console.log("üîå Disconnected from WalletConnect");
    disconnectWallet();
  });
}

function onWalletConnected(accounts, chainId) {
  const address = accounts[0];
  console.log("üîó Connected:", address, "on Chain ID:", chainId);
  localStorage.setItem("walletconnect_address", address);
  localStorage.setItem("walletconnect_chain", chainId);
  updateWalletUI(address);
}

function disconnectWallet() {
  localStorage.removeItem("walletconnect_address");
  localStorage.removeItem("walletconnect_chain");
  updateWalletUI(null);
}

function updateWalletUI(address) {
  const button = document.querySelector(".connect-wallet");
  if (button) {
    button.innerText = address ? shortenAddress(address) : "Connect Wallet";
    button.style.background = address ? "#00ffcc" : "#00fff7";
  }
}

function shortenAddress(addr) {
  return addr.slice(0, 6) + "..." + addr.slice(-4);
}

// ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ DOM ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß
document.addEventListener("DOMContentLoaded", () => {
  let connectBtn = document.querySelector(".connect-wallet");
  if (!connectBtn) {
    connectBtn = document.createElement("button");
    connectBtn.className = "connect-wallet";
    connectBtn.innerText = "Connect Wallet";
    connectBtn.style.cssText = "position:fixed;bottom:1rem;right:1rem;padding:0.75rem 1rem;background:#00fff7;border:none;border-radius:8px;color:#000;z-index:9999;";
    document.body.appendChild(connectBtn);
  }

  connectBtn.addEventListener("click", () => {
    connectWithWalletConnect();
  });

  // ‡πÇ‡∏´‡∏•‡∏î address ‡∏à‡∏≤‡∏Å localStorage ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
  const saved = localStorage.getItem("walletconnect_address");
  if (saved) updateWalletUI(saved);
});
